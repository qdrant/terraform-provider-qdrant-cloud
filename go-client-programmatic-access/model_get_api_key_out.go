/*
Qdrant Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qdrant_cloud_programmatic_access

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the GetApiKeyOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApiKeyOut{}

// GetApiKeyOut struct for GetApiKeyOut
type GetApiKeyOut struct {
	Id string `json:"id"`
	CreatedAt time.Time `json:"created_at"`
	UserId NullableString `json:"user_id,omitempty"`
	Prefix string `json:"prefix"`
	ClusterIdList []interface{} `json:"cluster_id_list,omitempty"`
	AccountId NullableString `json:"account_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _GetApiKeyOut GetApiKeyOut

// NewGetApiKeyOut instantiates a new GetApiKeyOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApiKeyOut(id string, createdAt time.Time, prefix string) *GetApiKeyOut {
	this := GetApiKeyOut{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Prefix = prefix
	return &this
}

// NewGetApiKeyOutWithDefaults instantiates a new GetApiKeyOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApiKeyOutWithDefaults() *GetApiKeyOut {
	this := GetApiKeyOut{}
	return &this
}

// GetId returns the Id field value
func (o *GetApiKeyOut) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyOut) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetApiKeyOut) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *GetApiKeyOut) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyOut) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GetApiKeyOut) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUserId returns the UserId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApiKeyOut) GetUserId() string {
	if o == nil || IsNil(o.UserId.Get()) {
		var ret string
		return ret
	}
	return *o.UserId.Get()
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApiKeyOut) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserId.Get(), o.UserId.IsSet()
}

// HasUserId returns a boolean if a field has been set.
func (o *GetApiKeyOut) HasUserId() bool {
	if o != nil && o.UserId.IsSet() {
		return true
	}

	return false
}

// SetUserId gets a reference to the given NullableString and assigns it to the UserId field.
func (o *GetApiKeyOut) SetUserId(v string) {
	o.UserId.Set(&v)
}
// SetUserIdNil sets the value for UserId to be an explicit nil
func (o *GetApiKeyOut) SetUserIdNil() {
	o.UserId.Set(nil)
}

// UnsetUserId ensures that no value is present for UserId, not even an explicit nil
func (o *GetApiKeyOut) UnsetUserId() {
	o.UserId.Unset()
}

// GetPrefix returns the Prefix field value
func (o *GetApiKeyOut) GetPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value
// and a boolean to check if the value has been set.
func (o *GetApiKeyOut) GetPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prefix, true
}

// SetPrefix sets field value
func (o *GetApiKeyOut) SetPrefix(v string) {
	o.Prefix = v
}

// GetClusterIdList returns the ClusterIdList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApiKeyOut) GetClusterIdList() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.ClusterIdList
}

// GetClusterIdListOk returns a tuple with the ClusterIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApiKeyOut) GetClusterIdListOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.ClusterIdList) {
		return nil, false
	}
	return o.ClusterIdList, true
}

// HasClusterIdList returns a boolean if a field has been set.
func (o *GetApiKeyOut) HasClusterIdList() bool {
	if o != nil && !IsNil(o.ClusterIdList) {
		return true
	}

	return false
}

// SetClusterIdList gets a reference to the given []interface{} and assigns it to the ClusterIdList field.
func (o *GetApiKeyOut) SetClusterIdList(v []interface{}) {
	o.ClusterIdList = v
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetApiKeyOut) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApiKeyOut) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *GetApiKeyOut) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *GetApiKeyOut) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *GetApiKeyOut) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *GetApiKeyOut) UnsetAccountId() {
	o.AccountId.Unset()
}

func (o GetApiKeyOut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApiKeyOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	if o.UserId.IsSet() {
		toSerialize["user_id"] = o.UserId.Get()
	}
	toSerialize["prefix"] = o.Prefix
	if o.ClusterIdList != nil {
		toSerialize["cluster_id_list"] = o.ClusterIdList
	}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *GetApiKeyOut) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created_at",
		"prefix",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApiKeyOut := _GetApiKeyOut{}

	err = json.Unmarshal(data, &varGetApiKeyOut)

	if err != nil {
		return err
	}

	*o = GetApiKeyOut(varGetApiKeyOut)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "user_id")
		delete(additionalProperties, "prefix")
		delete(additionalProperties, "cluster_id_list")
		delete(additionalProperties, "account_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableGetApiKeyOut struct {
	value *GetApiKeyOut
	isSet bool
}

func (v NullableGetApiKeyOut) Get() *GetApiKeyOut {
	return v.value
}

func (v *NullableGetApiKeyOut) Set(val *GetApiKeyOut) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApiKeyOut) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApiKeyOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApiKeyOut(val *GetApiKeyOut) *NullableGetApiKeyOut {
	return &NullableGetApiKeyOut{value: val, isSet: true}
}

func (v NullableGetApiKeyOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApiKeyOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


