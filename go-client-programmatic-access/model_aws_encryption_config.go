/*
Qdrant Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qdrant_cloud_programmatic_access

import (
	"encoding/json"
)

// checks if the AWSEncryptionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AWSEncryptionConfig{}

// AWSEncryptionConfig struct for AWSEncryptionConfig
type AWSEncryptionConfig struct {
	Managed *bool `json:"managed,omitempty"`
	EncryptionKeyId NullableString `json:"encryption_key_id,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AWSEncryptionConfig AWSEncryptionConfig

// NewAWSEncryptionConfig instantiates a new AWSEncryptionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAWSEncryptionConfig() *AWSEncryptionConfig {
	this := AWSEncryptionConfig{}
	var managed bool = true
	this.Managed = &managed
	return &this
}

// NewAWSEncryptionConfigWithDefaults instantiates a new AWSEncryptionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAWSEncryptionConfigWithDefaults() *AWSEncryptionConfig {
	this := AWSEncryptionConfig{}
	var managed bool = true
	this.Managed = &managed
	return &this
}

// GetManaged returns the Managed field value if set, zero value otherwise.
func (o *AWSEncryptionConfig) GetManaged() bool {
	if o == nil || IsNil(o.Managed) {
		var ret bool
		return ret
	}
	return *o.Managed
}

// GetManagedOk returns a tuple with the Managed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AWSEncryptionConfig) GetManagedOk() (*bool, bool) {
	if o == nil || IsNil(o.Managed) {
		return nil, false
	}
	return o.Managed, true
}

// HasManaged returns a boolean if a field has been set.
func (o *AWSEncryptionConfig) HasManaged() bool {
	if o != nil && !IsNil(o.Managed) {
		return true
	}

	return false
}

// SetManaged gets a reference to the given bool and assigns it to the Managed field.
func (o *AWSEncryptionConfig) SetManaged(v bool) {
	o.Managed = &v
}

// GetEncryptionKeyId returns the EncryptionKeyId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AWSEncryptionConfig) GetEncryptionKeyId() string {
	if o == nil || IsNil(o.EncryptionKeyId.Get()) {
		var ret string
		return ret
	}
	return *o.EncryptionKeyId.Get()
}

// GetEncryptionKeyIdOk returns a tuple with the EncryptionKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AWSEncryptionConfig) GetEncryptionKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionKeyId.Get(), o.EncryptionKeyId.IsSet()
}

// HasEncryptionKeyId returns a boolean if a field has been set.
func (o *AWSEncryptionConfig) HasEncryptionKeyId() bool {
	if o != nil && o.EncryptionKeyId.IsSet() {
		return true
	}

	return false
}

// SetEncryptionKeyId gets a reference to the given NullableString and assigns it to the EncryptionKeyId field.
func (o *AWSEncryptionConfig) SetEncryptionKeyId(v string) {
	o.EncryptionKeyId.Set(&v)
}
// SetEncryptionKeyIdNil sets the value for EncryptionKeyId to be an explicit nil
func (o *AWSEncryptionConfig) SetEncryptionKeyIdNil() {
	o.EncryptionKeyId.Set(nil)
}

// UnsetEncryptionKeyId ensures that no value is present for EncryptionKeyId, not even an explicit nil
func (o *AWSEncryptionConfig) UnsetEncryptionKeyId() {
	o.EncryptionKeyId.Unset()
}

func (o AWSEncryptionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AWSEncryptionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Managed) {
		toSerialize["managed"] = o.Managed
	}
	if o.EncryptionKeyId.IsSet() {
		toSerialize["encryption_key_id"] = o.EncryptionKeyId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AWSEncryptionConfig) UnmarshalJSON(data []byte) (err error) {
	varAWSEncryptionConfig := _AWSEncryptionConfig{}

	err = json.Unmarshal(data, &varAWSEncryptionConfig)

	if err != nil {
		return err
	}

	*o = AWSEncryptionConfig(varAWSEncryptionConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "managed")
		delete(additionalProperties, "encryption_key_id")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAWSEncryptionConfig struct {
	value *AWSEncryptionConfig
	isSet bool
}

func (v NullableAWSEncryptionConfig) Get() *AWSEncryptionConfig {
	return v.value
}

func (v *NullableAWSEncryptionConfig) Set(val *AWSEncryptionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAWSEncryptionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAWSEncryptionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAWSEncryptionConfig(val *AWSEncryptionConfig) *NullableAWSEncryptionConfig {
	return &NullableAWSEncryptionConfig{value: val, isSet: true}
}

func (v NullableAWSEncryptionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAWSEncryptionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


