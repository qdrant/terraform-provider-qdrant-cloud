/*
Qdrant Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qdrant_cloud_programmatic_access

import (
	"encoding/json"
	"fmt"
)

// checks if the ResourceConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceConfiguration{}

// ResourceConfiguration struct for ResourceConfiguration
type ResourceConfiguration struct {
	ResourceOptionId string `json:"resource_option_id"`
	ResourceOption NullableResourceOptionOut `json:"resource_option,omitempty"`
	Amount int32 `json:"amount"`
	AdditionalProperties map[string]interface{}
}

type _ResourceConfiguration ResourceConfiguration

// NewResourceConfiguration instantiates a new ResourceConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceConfiguration(resourceOptionId string, amount int32) *ResourceConfiguration {
	this := ResourceConfiguration{}
	this.ResourceOptionId = resourceOptionId
	this.Amount = amount
	return &this
}

// NewResourceConfigurationWithDefaults instantiates a new ResourceConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceConfigurationWithDefaults() *ResourceConfiguration {
	this := ResourceConfiguration{}
	return &this
}

// GetResourceOptionId returns the ResourceOptionId field value
func (o *ResourceConfiguration) GetResourceOptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceOptionId
}

// GetResourceOptionIdOk returns a tuple with the ResourceOptionId field value
// and a boolean to check if the value has been set.
func (o *ResourceConfiguration) GetResourceOptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceOptionId, true
}

// SetResourceOptionId sets field value
func (o *ResourceConfiguration) SetResourceOptionId(v string) {
	o.ResourceOptionId = v
}

// GetResourceOption returns the ResourceOption field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResourceConfiguration) GetResourceOption() ResourceOptionOut {
	if o == nil || IsNil(o.ResourceOption.Get()) {
		var ret ResourceOptionOut
		return ret
	}
	return *o.ResourceOption.Get()
}

// GetResourceOptionOk returns a tuple with the ResourceOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResourceConfiguration) GetResourceOptionOk() (*ResourceOptionOut, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceOption.Get(), o.ResourceOption.IsSet()
}

// HasResourceOption returns a boolean if a field has been set.
func (o *ResourceConfiguration) HasResourceOption() bool {
	if o != nil && o.ResourceOption.IsSet() {
		return true
	}

	return false
}

// SetResourceOption gets a reference to the given NullableResourceOptionOut and assigns it to the ResourceOption field.
func (o *ResourceConfiguration) SetResourceOption(v ResourceOptionOut) {
	o.ResourceOption.Set(&v)
}
// SetResourceOptionNil sets the value for ResourceOption to be an explicit nil
func (o *ResourceConfiguration) SetResourceOptionNil() {
	o.ResourceOption.Set(nil)
}

// UnsetResourceOption ensures that no value is present for ResourceOption, not even an explicit nil
func (o *ResourceConfiguration) UnsetResourceOption() {
	o.ResourceOption.Unset()
}

// GetAmount returns the Amount field value
func (o *ResourceConfiguration) GetAmount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Amount
}

// GetAmountOk returns a tuple with the Amount field value
// and a boolean to check if the value has been set.
func (o *ResourceConfiguration) GetAmountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Amount, true
}

// SetAmount sets field value
func (o *ResourceConfiguration) SetAmount(v int32) {
	o.Amount = v
}

func (o ResourceConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resource_option_id"] = o.ResourceOptionId
	if o.ResourceOption.IsSet() {
		toSerialize["resource_option"] = o.ResourceOption.Get()
	}
	toSerialize["amount"] = o.Amount

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResourceConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"resource_option_id",
		"amount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varResourceConfiguration := _ResourceConfiguration{}

	err = json.Unmarshal(data, &varResourceConfiguration)

	if err != nil {
		return err
	}

	*o = ResourceConfiguration(varResourceConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "resource_option_id")
		delete(additionalProperties, "resource_option")
		delete(additionalProperties, "amount")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResourceConfiguration struct {
	value *ResourceConfiguration
	isSet bool
}

func (v NullableResourceConfiguration) Get() *ResourceConfiguration {
	return v.value
}

func (v *NullableResourceConfiguration) Set(val *ResourceConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceConfiguration(val *ResourceConfiguration) *NullableResourceConfiguration {
	return &NullableResourceConfiguration{value: val, isSet: true}
}

func (v NullableResourceConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


