/*
Qdrant Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qdrant_cloud_programmatic_access

import (
	"encoding/json"
)

// checks if the ApiKeyIn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiKeyIn{}

// ApiKeyIn struct for ApiKeyIn
type ApiKeyIn struct {
	ClusterIdList []interface{} `json:"cluster_id_list,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ApiKeyIn ApiKeyIn

// NewApiKeyIn instantiates a new ApiKeyIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiKeyIn() *ApiKeyIn {
	this := ApiKeyIn{}
	return &this
}

// NewApiKeyInWithDefaults instantiates a new ApiKeyIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiKeyInWithDefaults() *ApiKeyIn {
	this := ApiKeyIn{}
	return &this
}

// GetClusterIdList returns the ClusterIdList field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ApiKeyIn) GetClusterIdList() []interface{} {
	if o == nil {
		var ret []interface{}
		return ret
	}
	return o.ClusterIdList
}

// GetClusterIdListOk returns a tuple with the ClusterIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiKeyIn) GetClusterIdListOk() ([]interface{}, bool) {
	if o == nil || IsNil(o.ClusterIdList) {
		return nil, false
	}
	return o.ClusterIdList, true
}

// HasClusterIdList returns a boolean if a field has been set.
func (o *ApiKeyIn) HasClusterIdList() bool {
	if o != nil && !IsNil(o.ClusterIdList) {
		return true
	}

	return false
}

// SetClusterIdList gets a reference to the given []interface{} and assigns it to the ClusterIdList field.
func (o *ApiKeyIn) SetClusterIdList(v []interface{}) {
	o.ClusterIdList = v
}

func (o ApiKeyIn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiKeyIn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ClusterIdList != nil {
		toSerialize["cluster_id_list"] = o.ClusterIdList
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ApiKeyIn) UnmarshalJSON(data []byte) (err error) {
	varApiKeyIn := _ApiKeyIn{}

	err = json.Unmarshal(data, &varApiKeyIn)

	if err != nil {
		return err
	}

	*o = ApiKeyIn(varApiKeyIn)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster_id_list")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableApiKeyIn struct {
	value *ApiKeyIn
	isSet bool
}

func (v NullableApiKeyIn) Get() *ApiKeyIn {
	return v.value
}

func (v *NullableApiKeyIn) Set(val *ApiKeyIn) {
	v.value = val
	v.isSet = true
}

func (v NullableApiKeyIn) IsSet() bool {
	return v.isSet
}

func (v *NullableApiKeyIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiKeyIn(val *ApiKeyIn) *NullableApiKeyIn {
	return &NullableApiKeyIn{value: val, isSet: true}
}

func (v NullableApiKeyIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiKeyIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


