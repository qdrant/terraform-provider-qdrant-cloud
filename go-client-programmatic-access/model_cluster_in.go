/*
Qdrant Cloud API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package qdrant_cloud_programmatic_access

import (
	"encoding/json"
	"fmt"
)

// checks if the ClusterIn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClusterIn{}

// ClusterIn struct for ClusterIn
type ClusterIn struct {
	OwnerId NullableString `json:"owner_id,omitempty"`
	AccountId NullableString `json:"account_id,omitempty"`
	Name string `json:"name"`
	CloudProvider string `json:"cloud_provider"`
	CloudRegion string `json:"cloud_region"`
	CloudRegionAz NullableString `json:"cloud_region_az,omitempty"`
	CloudRegionSetup NullableString `json:"cloud_region_setup,omitempty"`
	PrivateRegionId NullableString `json:"private_region_id,omitempty"`
	Version NullableString `json:"version,omitempty"`
	Configuration ClusterConfigurationIn `json:"configuration"`
	Schedule NullableScheduleIn `json:"schedule,omitempty"`
	EncryptionConfig NullableEncryptionConfigIn `json:"encryption_config,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ClusterIn ClusterIn

// NewClusterIn instantiates a new ClusterIn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClusterIn(name string, cloudProvider string, cloudRegion string, configuration ClusterConfigurationIn) *ClusterIn {
	this := ClusterIn{}
	this.Name = name
	this.CloudProvider = cloudProvider
	this.CloudRegion = cloudRegion
	this.Configuration = configuration
	return &this
}

// NewClusterInWithDefaults instantiates a new ClusterIn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClusterInWithDefaults() *ClusterIn {
	this := ClusterIn{}
	return &this
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetOwnerId() string {
	if o == nil || IsNil(o.OwnerId.Get()) {
		var ret string
		return ret
	}
	return *o.OwnerId.Get()
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OwnerId.Get(), o.OwnerId.IsSet()
}

// HasOwnerId returns a boolean if a field has been set.
func (o *ClusterIn) HasOwnerId() bool {
	if o != nil && o.OwnerId.IsSet() {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given NullableString and assigns it to the OwnerId field.
func (o *ClusterIn) SetOwnerId(v string) {
	o.OwnerId.Set(&v)
}
// SetOwnerIdNil sets the value for OwnerId to be an explicit nil
func (o *ClusterIn) SetOwnerIdNil() {
	o.OwnerId.Set(nil)
}

// UnsetOwnerId ensures that no value is present for OwnerId, not even an explicit nil
func (o *ClusterIn) UnsetOwnerId() {
	o.OwnerId.Unset()
}

// GetAccountId returns the AccountId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetAccountId() string {
	if o == nil || IsNil(o.AccountId.Get()) {
		var ret string
		return ret
	}
	return *o.AccountId.Get()
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountId.Get(), o.AccountId.IsSet()
}

// HasAccountId returns a boolean if a field has been set.
func (o *ClusterIn) HasAccountId() bool {
	if o != nil && o.AccountId.IsSet() {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given NullableString and assigns it to the AccountId field.
func (o *ClusterIn) SetAccountId(v string) {
	o.AccountId.Set(&v)
}
// SetAccountIdNil sets the value for AccountId to be an explicit nil
func (o *ClusterIn) SetAccountIdNil() {
	o.AccountId.Set(nil)
}

// UnsetAccountId ensures that no value is present for AccountId, not even an explicit nil
func (o *ClusterIn) UnsetAccountId() {
	o.AccountId.Unset()
}

// GetName returns the Name field value
func (o *ClusterIn) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ClusterIn) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ClusterIn) SetName(v string) {
	o.Name = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *ClusterIn) GetCloudProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *ClusterIn) GetCloudProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *ClusterIn) SetCloudProvider(v string) {
	o.CloudProvider = v
}

// GetCloudRegion returns the CloudRegion field value
func (o *ClusterIn) GetCloudRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudRegion
}

// GetCloudRegionOk returns a tuple with the CloudRegion field value
// and a boolean to check if the value has been set.
func (o *ClusterIn) GetCloudRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudRegion, true
}

// SetCloudRegion sets field value
func (o *ClusterIn) SetCloudRegion(v string) {
	o.CloudRegion = v
}

// GetCloudRegionAz returns the CloudRegionAz field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetCloudRegionAz() string {
	if o == nil || IsNil(o.CloudRegionAz.Get()) {
		var ret string
		return ret
	}
	return *o.CloudRegionAz.Get()
}

// GetCloudRegionAzOk returns a tuple with the CloudRegionAz field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetCloudRegionAzOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudRegionAz.Get(), o.CloudRegionAz.IsSet()
}

// HasCloudRegionAz returns a boolean if a field has been set.
func (o *ClusterIn) HasCloudRegionAz() bool {
	if o != nil && o.CloudRegionAz.IsSet() {
		return true
	}

	return false
}

// SetCloudRegionAz gets a reference to the given NullableString and assigns it to the CloudRegionAz field.
func (o *ClusterIn) SetCloudRegionAz(v string) {
	o.CloudRegionAz.Set(&v)
}
// SetCloudRegionAzNil sets the value for CloudRegionAz to be an explicit nil
func (o *ClusterIn) SetCloudRegionAzNil() {
	o.CloudRegionAz.Set(nil)
}

// UnsetCloudRegionAz ensures that no value is present for CloudRegionAz, not even an explicit nil
func (o *ClusterIn) UnsetCloudRegionAz() {
	o.CloudRegionAz.Unset()
}

// GetCloudRegionSetup returns the CloudRegionSetup field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetCloudRegionSetup() string {
	if o == nil || IsNil(o.CloudRegionSetup.Get()) {
		var ret string
		return ret
	}
	return *o.CloudRegionSetup.Get()
}

// GetCloudRegionSetupOk returns a tuple with the CloudRegionSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetCloudRegionSetupOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CloudRegionSetup.Get(), o.CloudRegionSetup.IsSet()
}

// HasCloudRegionSetup returns a boolean if a field has been set.
func (o *ClusterIn) HasCloudRegionSetup() bool {
	if o != nil && o.CloudRegionSetup.IsSet() {
		return true
	}

	return false
}

// SetCloudRegionSetup gets a reference to the given NullableString and assigns it to the CloudRegionSetup field.
func (o *ClusterIn) SetCloudRegionSetup(v string) {
	o.CloudRegionSetup.Set(&v)
}
// SetCloudRegionSetupNil sets the value for CloudRegionSetup to be an explicit nil
func (o *ClusterIn) SetCloudRegionSetupNil() {
	o.CloudRegionSetup.Set(nil)
}

// UnsetCloudRegionSetup ensures that no value is present for CloudRegionSetup, not even an explicit nil
func (o *ClusterIn) UnsetCloudRegionSetup() {
	o.CloudRegionSetup.Unset()
}

// GetPrivateRegionId returns the PrivateRegionId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetPrivateRegionId() string {
	if o == nil || IsNil(o.PrivateRegionId.Get()) {
		var ret string
		return ret
	}
	return *o.PrivateRegionId.Get()
}

// GetPrivateRegionIdOk returns a tuple with the PrivateRegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetPrivateRegionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivateRegionId.Get(), o.PrivateRegionId.IsSet()
}

// HasPrivateRegionId returns a boolean if a field has been set.
func (o *ClusterIn) HasPrivateRegionId() bool {
	if o != nil && o.PrivateRegionId.IsSet() {
		return true
	}

	return false
}

// SetPrivateRegionId gets a reference to the given NullableString and assigns it to the PrivateRegionId field.
func (o *ClusterIn) SetPrivateRegionId(v string) {
	o.PrivateRegionId.Set(&v)
}
// SetPrivateRegionIdNil sets the value for PrivateRegionId to be an explicit nil
func (o *ClusterIn) SetPrivateRegionIdNil() {
	o.PrivateRegionId.Set(nil)
}

// UnsetPrivateRegionId ensures that no value is present for PrivateRegionId, not even an explicit nil
func (o *ClusterIn) UnsetPrivateRegionId() {
	o.PrivateRegionId.Unset()
}

// GetVersion returns the Version field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetVersion() string {
	if o == nil || IsNil(o.Version.Get()) {
		var ret string
		return ret
	}
	return *o.Version.Get()
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Version.Get(), o.Version.IsSet()
}

// HasVersion returns a boolean if a field has been set.
func (o *ClusterIn) HasVersion() bool {
	if o != nil && o.Version.IsSet() {
		return true
	}

	return false
}

// SetVersion gets a reference to the given NullableString and assigns it to the Version field.
func (o *ClusterIn) SetVersion(v string) {
	o.Version.Set(&v)
}
// SetVersionNil sets the value for Version to be an explicit nil
func (o *ClusterIn) SetVersionNil() {
	o.Version.Set(nil)
}

// UnsetVersion ensures that no value is present for Version, not even an explicit nil
func (o *ClusterIn) UnsetVersion() {
	o.Version.Unset()
}

// GetConfiguration returns the Configuration field value
func (o *ClusterIn) GetConfiguration() ClusterConfigurationIn {
	if o == nil {
		var ret ClusterConfigurationIn
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *ClusterIn) GetConfigurationOk() (*ClusterConfigurationIn, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *ClusterIn) SetConfiguration(v ClusterConfigurationIn) {
	o.Configuration = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetSchedule() ScheduleIn {
	if o == nil || IsNil(o.Schedule.Get()) {
		var ret ScheduleIn
		return ret
	}
	return *o.Schedule.Get()
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetScheduleOk() (*ScheduleIn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule.Get(), o.Schedule.IsSet()
}

// HasSchedule returns a boolean if a field has been set.
func (o *ClusterIn) HasSchedule() bool {
	if o != nil && o.Schedule.IsSet() {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given NullableScheduleIn and assigns it to the Schedule field.
func (o *ClusterIn) SetSchedule(v ScheduleIn) {
	o.Schedule.Set(&v)
}
// SetScheduleNil sets the value for Schedule to be an explicit nil
func (o *ClusterIn) SetScheduleNil() {
	o.Schedule.Set(nil)
}

// UnsetSchedule ensures that no value is present for Schedule, not even an explicit nil
func (o *ClusterIn) UnsetSchedule() {
	o.Schedule.Unset()
}

// GetEncryptionConfig returns the EncryptionConfig field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ClusterIn) GetEncryptionConfig() EncryptionConfigIn {
	if o == nil || IsNil(o.EncryptionConfig.Get()) {
		var ret EncryptionConfigIn
		return ret
	}
	return *o.EncryptionConfig.Get()
}

// GetEncryptionConfigOk returns a tuple with the EncryptionConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ClusterIn) GetEncryptionConfigOk() (*EncryptionConfigIn, bool) {
	if o == nil {
		return nil, false
	}
	return o.EncryptionConfig.Get(), o.EncryptionConfig.IsSet()
}

// HasEncryptionConfig returns a boolean if a field has been set.
func (o *ClusterIn) HasEncryptionConfig() bool {
	if o != nil && o.EncryptionConfig.IsSet() {
		return true
	}

	return false
}

// SetEncryptionConfig gets a reference to the given NullableEncryptionConfigIn and assigns it to the EncryptionConfig field.
func (o *ClusterIn) SetEncryptionConfig(v EncryptionConfigIn) {
	o.EncryptionConfig.Set(&v)
}
// SetEncryptionConfigNil sets the value for EncryptionConfig to be an explicit nil
func (o *ClusterIn) SetEncryptionConfigNil() {
	o.EncryptionConfig.Set(nil)
}

// UnsetEncryptionConfig ensures that no value is present for EncryptionConfig, not even an explicit nil
func (o *ClusterIn) UnsetEncryptionConfig() {
	o.EncryptionConfig.Unset()
}

func (o ClusterIn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClusterIn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OwnerId.IsSet() {
		toSerialize["owner_id"] = o.OwnerId.Get()
	}
	if o.AccountId.IsSet() {
		toSerialize["account_id"] = o.AccountId.Get()
	}
	toSerialize["name"] = o.Name
	toSerialize["cloud_provider"] = o.CloudProvider
	toSerialize["cloud_region"] = o.CloudRegion
	if o.CloudRegionAz.IsSet() {
		toSerialize["cloud_region_az"] = o.CloudRegionAz.Get()
	}
	if o.CloudRegionSetup.IsSet() {
		toSerialize["cloud_region_setup"] = o.CloudRegionSetup.Get()
	}
	if o.PrivateRegionId.IsSet() {
		toSerialize["private_region_id"] = o.PrivateRegionId.Get()
	}
	if o.Version.IsSet() {
		toSerialize["version"] = o.Version.Get()
	}
	toSerialize["configuration"] = o.Configuration
	if o.Schedule.IsSet() {
		toSerialize["schedule"] = o.Schedule.Get()
	}
	if o.EncryptionConfig.IsSet() {
		toSerialize["encryption_config"] = o.EncryptionConfig.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ClusterIn) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"cloud_provider",
		"cloud_region",
		"configuration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varClusterIn := _ClusterIn{}

	err = json.Unmarshal(data, &varClusterIn)

	if err != nil {
		return err
	}

	*o = ClusterIn(varClusterIn)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "owner_id")
		delete(additionalProperties, "account_id")
		delete(additionalProperties, "name")
		delete(additionalProperties, "cloud_provider")
		delete(additionalProperties, "cloud_region")
		delete(additionalProperties, "cloud_region_az")
		delete(additionalProperties, "cloud_region_setup")
		delete(additionalProperties, "private_region_id")
		delete(additionalProperties, "version")
		delete(additionalProperties, "configuration")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "encryption_config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableClusterIn struct {
	value *ClusterIn
	isSet bool
}

func (v NullableClusterIn) Get() *ClusterIn {
	return v.value
}

func (v *NullableClusterIn) Set(val *ClusterIn) {
	v.value = val
	v.isSet = true
}

func (v NullableClusterIn) IsSet() bool {
	return v.isSet
}

func (v *NullableClusterIn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClusterIn(val *ClusterIn) *NullableClusterIn {
	return &NullableClusterIn{value: val, isSet: true}
}

func (v NullableClusterIn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClusterIn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


